buildscript {
    repositories {
        maven {url 'http://repo.spring.io/libs-snapshot'}
    }
    dependencies {
        classpath ('org.springframework.boot:spring-boot-gradle-plugin:1.2.4.BUILD-SNAPSHOT')
    }
}

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'

war {
    baseName = 'board'
    version = '0.1.0'
}

version = '1.0'

repositories {
//    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'http://repo.spring.io/libs-snapshot' }
}

configurations {
    providedRuntime
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web:1.2.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-thymeleaf:1.2.3.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-jdbc:1.2.3.RELEASE'
    compile 'aspectj:aspectjrt:1.5.4'
    compile 'org.aspectj:aspectjweaver:1.8.5'
    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'ch.qos.logback:logback-classic:1.1.3'
    compile 'mysql:mysql-connector-java:5.1.35'
    testCompile 'org.springframework.boot:spring-boot-starter-test:1.2.3.RELEASE'
    testCompile 'junit:junit:4.12'
}

test {
    testLogging {
        events 'started', 'passed'
    }

    onOutput { descriptor, event ->
        logger.lifecycle(event.message)
    }
}